/**
 * File: 'android_module_common.gradle'
 * All android projects can copy and include this file.
 */

// Define some common closures (methods) for code share
ext.getModuleProjectCommitCount = {
    String gitCommitCountCmd = "git rev-list HEAD --count"
    Process process = gitCommitCountCmd.execute((String[])null, project.projectDir)
    String errText = process.err.text
    try {
        return process.text.trim().toInteger()
    } catch (Exception e) {
        println String.format("Failed to execute #getModuleProjectCommitCount() with error [%s], " +
                "which is caused by [%s].", e.toString(), errText)
    }
}

ext.getModuleProjectLastCommitSha1 = {
    String gitCommitCountCmd = "git log --format=\"%H\" -1"
    String cmdResult = gitCommitCountCmd.execute((String[])null, project.projectDir).text
    return cmdResult.trim().replace('\"', '')
}

ext.getRootProjectLastCommitSha1 = {
    String gitCommitCountCmd = "git log --format=\"%H\" -1"
    String cmdResult = gitCommitCountCmd.execute((String[])null, rootProject.projectDir).text
    return cmdResult.trim().replace('\"', '')
}

ext.getBuildIdSuffix = {
    if (project.hasProperty('build_id')) {
        return "." + project.property('build_id')
    }
    return ""
}

ext.isIgnoreLintWarnings = {
    if (project.hasProperty('lint_ignore_warnings')) {
        return true
    }
    return false
}

ext.isApkSplitsEnabled = {
    return project.hasProperty('enable_apk_splits')
}

ext.calculatedVersionCode = getModuleProjectCommitCount()
ext.buildIdSuffix = getBuildIdSuffix()

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        manifestPlaceholders = [
                MODULE_GIT_COMMIT_SHA1: getModuleProjectLastCommitSha1(),
                ROOT_GIT_COMMIT_SHA1: getRootProjectLastCommitSha1()
        ]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        abortOnError true
        ignoreWarnings isIgnoreLintWarnings()

        disable 'MissingTranslation', 'ExpiredTargetSdkVersion'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
        unitTests.includeAndroidResources = true
    }
}
